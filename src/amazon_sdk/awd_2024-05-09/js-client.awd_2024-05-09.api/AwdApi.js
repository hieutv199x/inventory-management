/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {ErrorList} from '../js-client.awd_2024-05-09.model/ErrorList.js';
import {InboundEligibility} from '../js-client.awd_2024-05-09.model/InboundEligibility.js';
import {InboundOrder} from '../js-client.awd_2024-05-09.model/InboundOrder.js';
import {InboundOrderCreationData} from '../js-client.awd_2024-05-09.model/InboundOrderCreationData.js';
import {InboundOrderReference} from '../js-client.awd_2024-05-09.model/InboundOrderReference.js';
import {InboundPackages} from '../js-client.awd_2024-05-09.model/InboundPackages.js';
import {InboundShipment} from '../js-client.awd_2024-05-09.model/InboundShipment.js';
import {InventoryListing} from '../js-client.awd_2024-05-09.model/InventoryListing.js';
import {ShipmentLabels} from '../js-client.awd_2024-05-09.model/ShipmentLabels.js';
import {ShipmentListing} from '../js-client.awd_2024-05-09.model/ShipmentListing.js';
import {TransportationDetails} from '../js-client.awd_2024-05-09.model/TransportationDetails.js';

/**
* Awd service.
* @module awd_2024-05-09/js-client.awd_2024-05-09.api/AwdApi
* @version 2024-05-09
*/
export class AwdApi {

    /**
    * Constructs a new AwdApi. 
    * @alias module:awd_2024-05-09/js-client.awd_2024-05-09.api/AwdApi
    * @class
    * @param {module:awd_2024-05-09/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:awd_2024-05-09/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Cancels an AWD Inbound order and its associated shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order you want to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    cancelInboundWithHttpInfo(orderId) {
      let postBody = null;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling cancelInbound");
      }


      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundOrders/{orderId}/cancellation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Cancels an AWD Inbound order and its associated shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order you want to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    cancelInbound(orderId) {
      return this.cancelInboundWithHttpInfo(orderId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Determines if the packages you specify are eligible for an AWD inbound order and contains error details for ineligible packages.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundPackages} body Represents the packages you want to inbound.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundEligibility} and HTTP response
     */
    checkInboundEligibilityWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling checkInboundEligibility");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundEligibility;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundEligibility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Determines if the packages you specify are eligible for an AWD inbound order and contains error details for ineligible packages.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundPackages} body Represents the packages you want to inbound.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundEligibility}
     */
    checkInboundEligibility(body) {
      return this.checkInboundEligibilityWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms an AWD inbound order in `DRAFT` status.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to confirm.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    confirmInboundWithHttpInfo(orderId) {
      let postBody = null;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling confirmInbound");
      }


      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundOrders/{orderId}/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms an AWD inbound order in `DRAFT` status.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to confirm.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    confirmInbound(orderId) {
      return this.confirmInboundWithHttpInfo(orderId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Creates a draft AWD inbound order with a list of packages for inbound shipment. The operation creates one shipment per order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrderCreationData} body Payload for creating an inbound order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrderReference} and HTTP response
     */
    createInboundWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createInbound");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundOrderReference;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundOrders', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Creates a draft AWD inbound order with a list of packages for inbound shipment. The operation creates one shipment per order.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrderCreationData} body Payload for creating an inbound order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrderReference}
     */
    createInbound(body) {
      return this.createInboundWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves an AWD inbound order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to retrieve.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrder} and HTTP response
     */
    getInboundWithHttpInfo(orderId) {
      let postBody = null;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling getInbound");
      }


      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundOrder;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundOrders/{orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves an AWD inbound order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to retrieve.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrder}
     */
    getInbound(orderId) {
      return this.getInboundWithHttpInfo(orderId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
     * @param {String} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.skuQuantities If equal to `SHOW`, the response includes the shipment SKU quantity details.  Defaults to `HIDE`, in which case the response does not contain SKU quantities
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundShipment} and HTTP response
     */
    getInboundShipmentWithHttpInfo(shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getInboundShipment");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
        'skuQuantities': opts['skuQuantities']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundShipment;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments/{shipmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
     * @param {String} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.skuQuantities If equal to `SHOW`, the response includes the shipment SKU quantity details.  Defaults to `HIDE`, in which case the response does not contain SKU quantities
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundShipment}
     */
    getInboundShipment(shipmentId, opts) {
      return this.getInboundShipmentWithHttpInfo(shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves the box labels for a shipment ID that you specify. This is an asynchronous operation. If the label status is `GENERATED`, then the label URL is available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId ID for the shipment.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.pageType Page type for the generated labels. The default is `PLAIN_PAPER`.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.formatType The format type of the output file that contains your labels. The default format type is `PDF`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentLabels} and HTTP response
     */
    getInboundShipmentLabelsWithHttpInfo(shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getInboundShipmentLabels");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageType': opts['pageType'],
        'formatType': opts['formatType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ShipmentLabels;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments/{shipmentId}/labels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves the box labels for a shipment ID that you specify. This is an asynchronous operation. If the label status is `GENERATED`, then the label URL is available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId ID for the shipment.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.pageType Page type for the generated labels. The default is `PLAIN_PAPER`.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.formatType The format type of the output file that contains your labels. The default format type is `PDF`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentLabels}
     */
    getInboundShipmentLabels(shipmentId, opts) {
      return this.getInboundShipmentLabelsWithHttpInfo(shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortBy Field to sort results by. By default, the response will be sorted by UPDATED_AT.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.shipmentStatus Filter by inbound shipment status.
     * @param {Date} opts.updatedAfter List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.updatedBefore List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @param {String} opts.nextToken A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentListing} and HTTP response
     */
    listInboundShipmentsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'sortBy': opts['sortBy'],
        'sortOrder': opts['sortOrder'],
        'shipmentStatus': opts['shipmentStatus'],
        'updatedAfter': opts['updatedAfter'],
        'updatedBefore': opts['updatedBefore'],
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ShipmentListing;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortBy Field to sort results by. By default, the response will be sorted by UPDATED_AT.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.shipmentStatus Filter by inbound shipment status.
     * @param {Date} opts.updatedAfter List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.updatedBefore List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @param {String} opts.nextToken A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentListing}
     */
    listInboundShipments(opts) {
      return this.listInboundShipmentsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {String} opts.sku Filter by seller or merchant SKU for the item.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in `ASCENDING` or `DESCENDING` order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.details Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.
     * @param {String} opts.nextToken A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InventoryListing} and HTTP response
     */
    listInventoryWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'sku': opts['sku'],
        'sortOrder': opts['sortOrder'],
        'details': opts['details'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InventoryListing;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inventory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {String} opts.sku Filter by seller or merchant SKU for the item.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in `ASCENDING` or `DESCENDING` order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.details Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.
     * @param {String} opts.nextToken A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InventoryListing}
     */
    listInventory(opts) {
      return this.listInventoryWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates an AWD inbound order that is in `DRAFT` status and not yet confirmed. Use this operation to update the `packagesToInbound`, `originAddress` and `preferences` attributes.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to update.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrder} body Represents an AWD inbound order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateInboundWithHttpInfo(orderId, body) {
      let postBody = body;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling updateInbound");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateInbound");
      }


      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundOrders/{orderId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates an AWD inbound order that is in `DRAFT` status and not yet confirmed. Use this operation to update the `packagesToInbound`, `originAddress` and `preferences` attributes.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId The ID of the inbound order that you want to update.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundOrder} body Represents an AWD inbound order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateInbound(orderId, body) {
      return this.updateInboundWithHttpInfo(orderId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates transport details for an AWD shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment ID.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/TransportationDetails} body Transportation details for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateInboundShipmentTransportDetailsWithHttpInfo(shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling updateInboundShipmentTransportDetails");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateInboundShipmentTransportDetails");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments/{shipmentId}/transport', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates transport details for an AWD shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment ID.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/TransportationDetails} body Transportation details for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateInboundShipmentTransportDetails(shipmentId, body) {
      return this.updateInboundShipmentTransportDetailsWithHttpInfo(shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
