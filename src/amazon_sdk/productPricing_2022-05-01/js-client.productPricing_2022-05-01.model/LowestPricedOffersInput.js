/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Condition} from './Condition.js';

/**
 * The LowestPricedOffersInput model module.
 * @module productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput
 * @version 2022-05-01
 */
export class LowestPricedOffersInput {
  /**
   * Constructs a new <code>LowestPricedOffersInput</code>.
   * The input required for building `LowestPricedOffers` data in the response.
   * @alias module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput
   * @class
   * @param itemCondition {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Condition} The input parameter specifies the `itemCondition` of the offer that is requested for `LowestPricedOffers`. `New` is the default value for `itemCondition`.
   * @param offerType {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput.OfferTypeEnum} The input parameter specifies the type of offers requested for `LowestPricedOffers`. This applies to `Consumer` and `Business` offers. `Consumer` is the default `offerType`.
   */
  constructor(itemCondition, offerType) {
    this.itemCondition = itemCondition;
    this.offerType = offerType;
  }

  /**
   * Constructs a <code>LowestPricedOffersInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput} obj Optional instance to populate.
   * @return {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput} The populated <code>LowestPricedOffersInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new LowestPricedOffersInput();
      if (data.hasOwnProperty('itemCondition'))
        obj.itemCondition = Condition.constructFromObject(data['itemCondition']);
      if (data.hasOwnProperty('offerType'))
        obj.offerType = ApiClient.convertToType(data['offerType'], 'String');
    }
    return obj;
  }
}

/**
 * The input parameter specifies the `itemCondition` of the offer that is requested for `LowestPricedOffers`. `New` is the default value for `itemCondition`.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Condition} itemCondition
 */
LowestPricedOffersInput.prototype.itemCondition = undefined;

/**
 * Allowed values for the <code>offerType</code> property.
 * @enum {String}
 * @readonly
 */
LowestPricedOffersInput.OfferTypeEnum = {
  /**
   * value: "Consumer"
   * @const
   */
  consumer: "Consumer"
};

/**
 * The input parameter specifies the type of offers requested for `LowestPricedOffers`. This applies to `Consumer` and `Business` offers. `Consumer` is the default `offerType`.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput.OfferTypeEnum} offerType
 */
LowestPricedOffersInput.prototype.offerType = undefined;


