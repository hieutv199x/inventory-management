/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {BalanceListing} from '../js-client.sellerWallet_2024-03-01.model/BalanceListing.js';
import {BankAccount} from '../js-client.sellerWallet_2024-03-01.model/BankAccount.js';
import {BankAccountListing} from '../js-client.sellerWallet_2024-03-01.model/BankAccountListing.js';
import {ErrorList} from '../js-client.sellerWallet_2024-03-01.model/ErrorList.js';

/**
* Accounts service.
* @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.api/AccountsApi
* @version 2024-03-01
*/
export class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.api/AccountsApi
    * @class
    * @param {module:sellerWallet_2024-03-01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:sellerWallet_2024-03-01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Find particular Amazon SW account by Amazon account identifier
     * Retrieve a Seller Wallet bank account by Amazon account identifier.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccount} and HTTP response
     */
    getAccountWithHttpInfo(accountId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getAccount");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getAccount");
      }


      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BankAccount;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/accounts/{accountId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Find particular Amazon SW account by Amazon account identifier
     * Retrieve a Seller Wallet bank account by Amazon account identifier.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccount}
     */
    getAccount(accountId, marketplaceId) {
      return this.getAccountWithHttpInfo(accountId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Find balance in particular Amazon SW account by Amazon account identifier
     * Retrieve the balance in a given Seller Wallet bank account.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BalanceListing} and HTTP response
     */
    listAccountBalancesWithHttpInfo(accountId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listAccountBalances");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listAccountBalances");
      }


      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BalanceListing;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/accounts/{accountId}/balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Find balance in particular Amazon SW account by Amazon account identifier
     * Retrieve the balance in a given Seller Wallet bank account.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BalanceListing}
     */
    listAccountBalances(accountId, marketplaceId) {
      return this.listAccountBalancesWithHttpInfo(accountId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get all Amazon SW accounts for the seller
     * Get Seller Wallet accounts for a seller.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for which items are returned.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccountListing} and HTTP response
     */
    listAccountsWithHttpInfo(marketplaceId) {
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listAccounts");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BankAccountListing;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Get all Amazon SW accounts for the seller
     * Get Seller Wallet accounts for a seller.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for which items are returned.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccountListing}
     */
    listAccounts(marketplaceId) {
      return this.listAccountsWithHttpInfo(marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
