/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {DeleteTransferSchedule} from '../js-client.sellerWallet_2024-03-01.model/DeleteTransferSchedule.js';
import {ErrorList} from '../js-client.sellerWallet_2024-03-01.model/ErrorList.js';
import {TransferSchedule} from '../js-client.sellerWallet_2024-03-01.model/TransferSchedule.js';
import {TransferScheduleListing} from '../js-client.sellerWallet_2024-03-01.model/TransferScheduleListing.js';
import {TransferScheduleRequest} from '../js-client.sellerWallet_2024-03-01.model/TransferScheduleRequest.js';

/**
* TransferSchedule service.
* @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.api/TransferScheduleApi
* @version 2024-03-01
*/
export class TransferScheduleApi {

    /**
    * Constructs a new TransferScheduleApi. 
    * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.api/TransferScheduleApi
    * @class
    * @param {module:sellerWallet_2024-03-01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:sellerWallet_2024-03-01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Create a transfer schedule request from Amazon SW account to another customer provided account
     * Create a transfer schedule request from a Seller Wallet account to another customer-provided account.
     * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleRequest} body Defines the actual payload of the request
     * @param {String} destAccountDigitalSignature Digital signature for the destination bank account details.
     * @param {String} amountDigitalSignature Digital signature for the source currency transaction amount.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule} and HTTP response
     */
    createTransferScheduleWithHttpInfo(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createTransferSchedule");
      }

      // verify the required parameter 'destAccountDigitalSignature' is set
      if (destAccountDigitalSignature === undefined || destAccountDigitalSignature === null) {
        throw new Error("Missing the required parameter 'destAccountDigitalSignature' when calling createTransferSchedule");
      }

      // verify the required parameter 'amountDigitalSignature' is set
      if (amountDigitalSignature === undefined || amountDigitalSignature === null) {
        throw new Error("Missing the required parameter 'amountDigitalSignature' when calling createTransferSchedule");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling createTransferSchedule");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
        'destAccountDigitalSignature': destAccountDigitalSignature,
        'amountDigitalSignature': amountDigitalSignature
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferSchedule;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/transferSchedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Create a transfer schedule request from Amazon SW account to another customer provided account
     * Create a transfer schedule request from a Seller Wallet account to another customer-provided account.
     * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleRequest} body Defines the actual payload of the request
     * @param {String} destAccountDigitalSignature Digital signature for the destination bank account details.
     * @param {String} amountDigitalSignature Digital signature for the source currency transaction amount.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule}
     */
    createTransferSchedule(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId) {
      return this.createTransferScheduleWithHttpInfo(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account
     * Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account.
     * @param {String} transferScheduleId A unique reference ID for a scheduled transfer.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/DeleteTransferSchedule} and HTTP response
     */
    deleteScheduleTransactionWithHttpInfo(transferScheduleId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'transferScheduleId' is set
      if (transferScheduleId === undefined || transferScheduleId === null) {
        throw new Error("Missing the required parameter 'transferScheduleId' when calling deleteScheduleTransaction");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling deleteScheduleTransaction");
      }


      let pathParams = {
        'transferScheduleId': transferScheduleId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteTransferSchedule;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account
     * Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account.
     * @param {String} transferScheduleId A unique reference ID for a scheduled transfer.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/DeleteTransferSchedule}
     */
    deleteScheduleTransaction(transferScheduleId, marketplaceId) {
      return this.deleteScheduleTransactionWithHttpInfo(transferScheduleId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Find particular Amazon Seller Wallet account transfer schedule by Amazon transfer schedule identifier
     * Find a particular Amazon Seller Wallet account transfer schedule.
     * @param {String} transferScheduleId The schedule ID of the Amazon Seller Wallet transfer.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule} and HTTP response
     */
    getTransferScheduleWithHttpInfo(transferScheduleId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'transferScheduleId' is set
      if (transferScheduleId === undefined || transferScheduleId === null) {
        throw new Error("Missing the required parameter 'transferScheduleId' when calling getTransferSchedule");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getTransferSchedule");
      }


      let pathParams = {
        'transferScheduleId': transferScheduleId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferSchedule;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Find particular Amazon Seller Wallet account transfer schedule by Amazon transfer schedule identifier
     * Find a particular Amazon Seller Wallet account transfer schedule.
     * @param {String} transferScheduleId The schedule ID of the Amazon Seller Wallet transfer.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule}
     */
    getTransferSchedule(transferScheduleId, marketplaceId) {
      return this.getTransferScheduleWithHttpInfo(transferScheduleId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * The API will return all the transfer schedules for a given Amazon SW account
     * Retrieve transfer schedules of a Seller Wallet bank account.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {String} opts.nextPageToken Pagination token to retrieve a specific page of results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleListing} and HTTP response
     */
    listTransferSchedulesWithHttpInfo(accountId, marketplaceId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listTransferSchedules");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listTransferSchedules");
      }


      let pathParams = {
      };
      let queryParams = {
        'accountId': accountId,
        'marketplaceId': marketplaceId,
        'nextPageToken': opts['nextPageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferScheduleListing;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/transferSchedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * The API will return all the transfer schedules for a given Amazon SW account
     * Retrieve transfer schedules of a Seller Wallet bank account.
     * @param {String} accountId ID of the Amazon SW account
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {String} opts.nextPageToken Pagination token to retrieve a specific page of results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleListing}
     */
    listTransferSchedules(accountId, marketplaceId, opts) {
      return this.listTransferSchedulesWithHttpInfo(accountId, marketplaceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.
     * Returns a transfer belonging to the updated scheduled transfer request
     * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule} body Defines the actual payload of the scheduled transfer request that is to be updated. 
     * @param {String} destAccountDigitalSignature Digital signature for the destination bank account details.
     * @param {String} amountDigitalSignature Digital signature for the source currency transaction amount.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule} and HTTP response
     */
    updateTransferScheduleWithHttpInfo(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateTransferSchedule");
      }

      // verify the required parameter 'destAccountDigitalSignature' is set
      if (destAccountDigitalSignature === undefined || destAccountDigitalSignature === null) {
        throw new Error("Missing the required parameter 'destAccountDigitalSignature' when calling updateTransferSchedule");
      }

      // verify the required parameter 'amountDigitalSignature' is set
      if (amountDigitalSignature === undefined || amountDigitalSignature === null) {
        throw new Error("Missing the required parameter 'amountDigitalSignature' when calling updateTransferSchedule");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling updateTransferSchedule");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
        'destAccountDigitalSignature': destAccountDigitalSignature,
        'amountDigitalSignature': amountDigitalSignature
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransferSchedule;

      return this.apiClient.callApi(
        '/finances/transfers/wallet/2024-03-01/transferSchedules', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.
     * Returns a transfer belonging to the updated scheduled transfer request
     * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule} body Defines the actual payload of the scheduled transfer request that is to be updated. 
     * @param {String} destAccountDigitalSignature Digital signature for the destination bank account details.
     * @param {String} amountDigitalSignature Digital signature for the source currency transaction amount.
     * @param {String} marketplaceId The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferSchedule}
     */
    updateTransferSchedule(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId) {
      return this.updateTransferScheduleWithHttpInfo(body, destAccountDigitalSignature, amountDigitalSignature, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
