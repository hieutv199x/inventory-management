/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ScheduleExpression} from './ScheduleExpression.js';
import {ScheduleTransferType} from './ScheduleTransferType.js';

/**
 * The TransferScheduleInformation model module.
 * @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleInformation
 * @version 2024-03-01
 */
export class TransferScheduleInformation {
  /**
   * Constructs a new <code>TransferScheduleInformation</code>.
   * Parameters containing information required for initiating a schedule transfer 
   * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleInformation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TransferScheduleInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleInformation} obj Optional instance to populate.
   * @return {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleInformation} The populated <code>TransferScheduleInformation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new TransferScheduleInformation();
      if (data.hasOwnProperty('scheduleStartDate'))
        obj.scheduleStartDate = ApiClient.convertToType(data['scheduleStartDate'], 'Date');
      if (data.hasOwnProperty('scheduleEndDate'))
        obj.scheduleEndDate = ApiClient.convertToType(data['scheduleEndDate'], 'Date');
      if (data.hasOwnProperty('scheduleExpression'))
        obj.scheduleExpression = ScheduleExpression.constructFromObject(data['scheduleExpression']);
      if (data.hasOwnProperty('scheduleType'))
        obj.scheduleType = ScheduleTransferType.constructFromObject(data['scheduleType']);
    }
    return obj;
  }
}

/**
 * Field to specify start date of the scheduled transfer 
 * @member {Date} scheduleStartDate
 */
TransferScheduleInformation.prototype.scheduleStartDate = undefined;

/**
 * Field to specify end date of the scheduled transfer 
 * @member {Date} scheduleEndDate
 */
TransferScheduleInformation.prototype.scheduleEndDate = undefined;

/**
 * Field to specify expression for how often the schedule transfer repeats. Refer to this documentation: https://docs.aws.amazon.com/scheduler/latest/APIReference/API_CreateSchedule.html 
 * @member {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/ScheduleExpression} scheduleExpression
 */
TransferScheduleInformation.prototype.scheduleExpression = undefined;

/**
 * Field to specify type of the transfer being scheduled
 * @member {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/ScheduleTransferType} scheduleType
 */
TransferScheduleInformation.prototype.scheduleType = undefined;


