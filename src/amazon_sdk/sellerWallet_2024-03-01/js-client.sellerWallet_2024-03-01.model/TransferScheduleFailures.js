/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The TransferScheduleFailures model module.
 * @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleFailures
 * @version 2024-03-01
 */
export class TransferScheduleFailures {
  /**
   * Constructs a new <code>TransferScheduleFailures</code>.
   * Specifies the balance amount in the Amazon SW bank account
   * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleFailures
   * @class
   * @param transferScheduleFailureDate {Date} The transfer schedule cancellation date 
   * @param transferScheduleFailureReason {String} The statement/reasoning listed for the cancellation of the transfer schedule 
   */
  constructor(transferScheduleFailureDate, transferScheduleFailureReason) {
    this.transferScheduleFailureDate = transferScheduleFailureDate;
    this.transferScheduleFailureReason = transferScheduleFailureReason;
  }

  /**
   * Constructs a <code>TransferScheduleFailures</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleFailures} obj Optional instance to populate.
   * @return {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransferScheduleFailures} The populated <code>TransferScheduleFailures</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new TransferScheduleFailures();
      if (data.hasOwnProperty('transferScheduleFailureDate'))
        obj.transferScheduleFailureDate = ApiClient.convertToType(data['transferScheduleFailureDate'], 'Date');
      if (data.hasOwnProperty('transferScheduleFailureReason'))
        obj.transferScheduleFailureReason = ApiClient.convertToType(data['transferScheduleFailureReason'], 'String');
    }
    return obj;
  }
}

/**
 * The transfer schedule cancellation date 
 * @member {Date} transferScheduleFailureDate
 */
TransferScheduleFailures.prototype.transferScheduleFailureDate = undefined;

/**
 * The statement/reasoning listed for the cancellation of the transfer schedule 
 * @member {String} transferScheduleFailureReason
 */
TransferScheduleFailures.prototype.transferScheduleFailureReason = undefined;


