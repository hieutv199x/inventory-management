/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {BankAccount} from './BankAccount.js';

/**
 * The TransactionInstrumentDetails model module.
 * @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransactionInstrumentDetails
 * @version 2024-03-01
 */
export class TransactionInstrumentDetails {
  /**
   * Constructs a new <code>TransactionInstrumentDetails</code>.
   * Request body to create transaction instrument, Amazon performs validation and screening (anti-money laundering measuers) on all the transaction instruments before executing a transaction thus it requires transaction instrument holder's contact details as well 
   * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransactionInstrumentDetails
   * @class
   * @param bankAccount {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccount} Specifies the destination bank account details where the money needs to be deposited 
   * @param bankAccountNumber {String} This field would be used to populate the bank account number of the destination payment method. The field is intentionally not included in any other Schemas since Amazon internal systems will never receive it in unencrypted format, so field won't be part of the request signature 
   * @param accountHolderName {String} The bank account holder's name (expected to be an Amazon customer).  **Note:** This field is encrypted before Amazon receives it, so should not be used to generate `destAccountDigitalSignature`, and should not be included in the request signature.
   */
  constructor(bankAccount, bankAccountNumber, accountHolderName) {
    this.bankAccount = bankAccount;
    this.bankAccountNumber = bankAccountNumber;
    this.accountHolderName = accountHolderName;
  }

  /**
   * Constructs a <code>TransactionInstrumentDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransactionInstrumentDetails} obj Optional instance to populate.
   * @return {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/TransactionInstrumentDetails} The populated <code>TransactionInstrumentDetails</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new TransactionInstrumentDetails();
      if (data.hasOwnProperty('bankAccount'))
        obj.bankAccount = BankAccount.constructFromObject(data['bankAccount']);
      if (data.hasOwnProperty('bankAccountNumber'))
        obj.bankAccountNumber = ApiClient.convertToType(data['bankAccountNumber'], 'String');
      if (data.hasOwnProperty('accountHolderName'))
        obj.accountHolderName = ApiClient.convertToType(data['accountHolderName'], 'String');
    }
    return obj;
  }
}

/**
 * Specifies the destination bank account details where the money needs to be deposited 
 * @member {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BankAccount} bankAccount
 */
TransactionInstrumentDetails.prototype.bankAccount = undefined;

/**
 * This field would be used to populate the bank account number of the destination payment method. The field is intentionally not included in any other Schemas since Amazon internal systems will never receive it in unencrypted format, so field won't be part of the request signature 
 * @member {String} bankAccountNumber
 */
TransactionInstrumentDetails.prototype.bankAccountNumber = undefined;

/**
 * The bank account holder's name (expected to be an Amazon customer).  **Note:** This field is encrypted before Amazon receives it, so should not be used to generate `destAccountDigitalSignature`, and should not be included in the request signature.
 * @member {String} accountHolderName
 */
TransactionInstrumentDetails.prototype.accountHolderName = undefined;


