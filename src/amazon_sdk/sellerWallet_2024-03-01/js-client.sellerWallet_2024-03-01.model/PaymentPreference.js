/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API Spec.  For more information, refer to the [Seller Wallet Open Banking API Use Case Guide](doc:seller-wallet-open-banking-api-v2024-03-01-use-case-guide).
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {BigDecimal} from './BigDecimal.js';
import {PaymentPreferencePaymentType} from './PaymentPreferencePaymentType.js';

/**
 * The PaymentPreference model module.
 * @module sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreference
 * @version 2024-03-01
 */
export class PaymentPreference {
  /**
   * Constructs a new <code>PaymentPreference</code>.
   * Payment preference type in which transfer is being scheduled 
   * @alias module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreference
   * @class
   * @param paymentPreferencePaymentType {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreferencePaymentType} Specifies the preferred payment type for the scheduled transaction eg:PERCENTAGE of certain total amount in account 
   * @param value {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BigDecimal} The value of the payment preference.
   */
  constructor(paymentPreferencePaymentType, value) {
    this.paymentPreferencePaymentType = paymentPreferencePaymentType;
    this.value = value;
  }

  /**
   * Constructs a <code>PaymentPreference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreference} obj Optional instance to populate.
   * @return {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreference} The populated <code>PaymentPreference</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PaymentPreference();
      if (data.hasOwnProperty('paymentPreferencePaymentType'))
        obj.paymentPreferencePaymentType = PaymentPreferencePaymentType.constructFromObject(data['paymentPreferencePaymentType']);
      if (data.hasOwnProperty('value'))
        obj.value = BigDecimal.constructFromObject(data['value']);
    }
    return obj;
  }
}

/**
 * Specifies the preferred payment type for the scheduled transaction eg:PERCENTAGE of certain total amount in account 
 * @member {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/PaymentPreferencePaymentType} paymentPreferencePaymentType
 */
PaymentPreference.prototype.paymentPreferencePaymentType = undefined;

/**
 * The value of the payment preference.
 * @member {module:sellerWallet_2024-03-01/js-client.sellerWallet_2024-03-01.model/BigDecimal} value
 */
PaymentPreference.prototype.value = undefined;


