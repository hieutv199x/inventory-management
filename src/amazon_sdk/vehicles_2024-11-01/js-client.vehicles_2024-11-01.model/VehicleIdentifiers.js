/*
 * The Selling Partner API for Automotive.
 * The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.
 *
 * OpenAPI spec version: 2024-11-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {VehicleStandard} from './VehicleStandard.js';

/**
 * The VehicleIdentifiers model module.
 * @module vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers
 * @version 2024-11-01
 */
export class VehicleIdentifiers {
  /**
   * Constructs a new <code>VehicleIdentifiers</code>.
   * Combination of vehicle standard and id that can uniquely identify a vehicle from Amazon's catalog.
   * @alias module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers
   * @class
   * @param standard {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleStandard} Vehicle standard used to uniquely identify a vehicle.
   * @param value {String} Id that can uniquely identify a vehicle based the vehicle identification standard.
   */
  constructor(standard, value) {
    this.standard = standard;
    this.value = value;
  }

  /**
   * Constructs a <code>VehicleIdentifiers</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers} obj Optional instance to populate.
   * @return {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers} The populated <code>VehicleIdentifiers</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new VehicleIdentifiers();
      if (data.hasOwnProperty('standard'))
        obj.standard = VehicleStandard.constructFromObject(data['standard']);
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
    }
    return obj;
  }
}

/**
 * Vehicle standard used to uniquely identify a vehicle.
 * @member {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleStandard} standard
 */
VehicleIdentifiers.prototype.standard = undefined;

/**
 * Id that can uniquely identify a vehicle based the vehicle identification standard.
 * @member {String} value
 */
VehicleIdentifiers.prototype.value = undefined;


