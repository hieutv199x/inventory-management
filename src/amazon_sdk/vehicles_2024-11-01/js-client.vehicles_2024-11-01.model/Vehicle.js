/*
 * The Selling Partner API for Automotive.
 * The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.
 *
 * OpenAPI spec version: 2024-11-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {EngineOutput} from './EngineOutput.js';
import {MonthAndYear} from './MonthAndYear.js';
import {VehicleIdentifiers} from './VehicleIdentifiers.js';
import {VehicleStatusInCatalog} from './VehicleStatusInCatalog.js';

/**
 * The Vehicle model module.
 * @module vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/Vehicle
 * @version 2024-11-01
 */
export class Vehicle {
  /**
   * Constructs a new <code>Vehicle</code>.
   * Combinations of attributes and unique identifier that represents a vehicle in vehicle list.
   * @alias module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/Vehicle
   * @class
   * @param make {String} Vehicle Brand.
   * @param model {String} Specific model of a vehicle.
   * @param identifiers {Array.<module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers>} Identifiers that can be used to identify the vehicle uniquely
   */
  constructor(make, model, identifiers) {
    this.make = make;
    this.model = model;
    this.identifiers = identifiers;
  }

  /**
   * Constructs a <code>Vehicle</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/Vehicle} obj Optional instance to populate.
   * @return {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/Vehicle} The populated <code>Vehicle</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Vehicle();
      if (data.hasOwnProperty('make'))
        obj.make = ApiClient.convertToType(data['make'], 'String');
      if (data.hasOwnProperty('model'))
        obj.model = ApiClient.convertToType(data['model'], 'String');
      if (data.hasOwnProperty('variantName'))
        obj.variantName = ApiClient.convertToType(data['variantName'], 'String');
      if (data.hasOwnProperty('bodyStyle'))
        obj.bodyStyle = ApiClient.convertToType(data['bodyStyle'], 'String');
      if (data.hasOwnProperty('driveType'))
        obj.driveType = ApiClient.convertToType(data['driveType'], 'String');
      if (data.hasOwnProperty('energy'))
        obj.energy = ApiClient.convertToType(data['energy'], 'String');
      if (data.hasOwnProperty('engineOutput'))
        obj.engineOutput = ApiClient.convertToType(data['engineOutput'], [EngineOutput]);
      if (data.hasOwnProperty('manufacturingStartDate'))
        obj.manufacturingStartDate = MonthAndYear.constructFromObject(data['manufacturingStartDate']);
      if (data.hasOwnProperty('manufacturingStopDate'))
        obj.manufacturingStopDate = MonthAndYear.constructFromObject(data['manufacturingStopDate']);
      if (data.hasOwnProperty('lastProcessedDate'))
        obj.lastProcessedDate = ApiClient.convertToType(data['lastProcessedDate'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = VehicleStatusInCatalog.constructFromObject(data['status']);
      if (data.hasOwnProperty('identifiers'))
        obj.identifiers = ApiClient.convertToType(data['identifiers'], [VehicleIdentifiers]);
    }
    return obj;
  }
}

/**
 * Vehicle Brand.
 * @member {String} make
 */
Vehicle.prototype.make = undefined;

/**
 * Specific model of a vehicle.
 * @member {String} model
 */
Vehicle.prototype.model = undefined;

/**
 * Name of the vehicle variant.
 * @member {String} variantName
 */
Vehicle.prototype.variantName = undefined;

/**
 * Body style of vehicle (example: Hatchback, Cabriolet).
 * @member {String} bodyStyle
 */
Vehicle.prototype.bodyStyle = undefined;

/**
 * Drive type of vehicle(example: Rear wheel drive).
 * @member {String} driveType
 */
Vehicle.prototype.driveType = undefined;

/**
 * Energy Source for the vehicle(example: Petrol)
 * @member {String} energy
 */
Vehicle.prototype.energy = undefined;

/**
 * Engine output of vehicle.
 * @member {Array.<module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/EngineOutput>} engineOutput
 */
Vehicle.prototype.engineOutput = undefined;

/**
 * Vehicle manufacturing start date.
 * @member {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/MonthAndYear} manufacturingStartDate
 */
Vehicle.prototype.manufacturingStartDate = undefined;

/**
 * Vehicle manufacturing stop date. If it is empty, then the vehicle is still being manufactured.
 * @member {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/MonthAndYear} manufacturingStopDate
 */
Vehicle.prototype.manufacturingStopDate = undefined;

/**
 * The date on which the vehicle was last updated, in ISO-8601 date/time format.
 * @member {String} lastProcessedDate
 */
Vehicle.prototype.lastProcessedDate = undefined;

/**
 * Denotes if the vehicle is active or deleted from Amazon's catalog.
 * @member {module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleStatusInCatalog} status
 */
Vehicle.prototype.status = undefined;

/**
 * Identifiers that can be used to identify the vehicle uniquely
 * @member {Array.<module:vehicles_2024-11-01/js-client.vehicles_2024-11-01.model/VehicleIdentifiers>} identifiers
 */
Vehicle.prototype.identifiers = undefined;


