/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The LabelData model module.
 * @module vendorShipments/js-client.vendorShipments.model/LabelData
 * @version v1
 */
export class LabelData {
  /**
   * Constructs a new <code>LabelData</code>.
   * Label details as part of the transport label response
   * @alias module:vendorShipments/js-client.vendorShipments.model/LabelData
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>LabelData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorShipments/js-client.vendorShipments.model/LabelData} obj Optional instance to populate.
   * @return {module:vendorShipments/js-client.vendorShipments.model/LabelData} The populated <code>LabelData</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new LabelData();
      if (data.hasOwnProperty('labelSequenceNumber'))
        obj.labelSequenceNumber = ApiClient.convertToType(data['labelSequenceNumber'], 'Number');
      if (data.hasOwnProperty('labelFormat'))
        obj.labelFormat = ApiClient.convertToType(data['labelFormat'], 'String');
      if (data.hasOwnProperty('carrierCode'))
        obj.carrierCode = ApiClient.convertToType(data['carrierCode'], 'String');
      if (data.hasOwnProperty('trackingId'))
        obj.trackingId = ApiClient.convertToType(data['trackingId'], 'String');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
    }
    return obj;
  }
}

/**
 * A sequential number assigned to each label within a shipment.
 * @member {Number} labelSequenceNumber
 */
LabelData.prototype.labelSequenceNumber = undefined;

/**
 * Allowed values for the <code>labelFormat</code> property.
 * @enum {String}
 * @readonly
 */
LabelData.LabelFormatEnum = {
  /**
   * value: "PDF"
   * @const
   */
  PDF: "PDF"
};

/**
 * The format of the label.
 * @member {module:vendorShipments/js-client.vendorShipments.model/LabelData.LabelFormatEnum} labelFormat
 */
LabelData.prototype.labelFormat = undefined;

/**
 * Unique identification of the carrier.
 * @member {String} carrierCode
 */
LabelData.prototype.carrierCode = undefined;

/**
 * Tracking Id for the transportation.
 * @member {String} trackingId
 */
LabelData.prototype.trackingId = undefined;

/**
 * The base-64 encoded string that represents the shipment label.
 * @member {String} label
 */
LabelData.prototype.label = undefined;


