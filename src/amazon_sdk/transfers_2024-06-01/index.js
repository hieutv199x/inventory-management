/*
 * The Selling Partner API for Transfers.
 * The Selling Partner API for Transfers enables selling partners to retrieve payment methods and initiate payouts for their seller accounts. This API supports the following marketplaces: DE, FR, IT, ES, SE, NL, PL, and BE.
 *
 * OpenAPI spec version: 2024-06-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from './ApiClient.js';
import {AssignmentType} from './js-client.transfers_2024-06-01.model/AssignmentType.js';
import {Error} from './js-client.transfers_2024-06-01.model/Error.js';
import {ErrorList} from './js-client.transfers_2024-06-01.model/ErrorList.js';
import {ExpiryDate} from './js-client.transfers_2024-06-01.model/ExpiryDate.js';
import {GetPaymentMethodsResponse} from './js-client.transfers_2024-06-01.model/GetPaymentMethodsResponse.js';
import {InitiatePayoutRequest} from './js-client.transfers_2024-06-01.model/InitiatePayoutRequest.js';
import {InitiatePayoutResponse} from './js-client.transfers_2024-06-01.model/InitiatePayoutResponse.js';
import {MarketplaceId} from './js-client.transfers_2024-06-01.model/MarketplaceId.js';
import {PaymentMethodDetails} from './js-client.transfers_2024-06-01.model/PaymentMethodDetails.js';
import {PaymentMethodList} from './js-client.transfers_2024-06-01.model/PaymentMethodList.js';
import {PaymentMethodType} from './js-client.transfers_2024-06-01.model/PaymentMethodType.js';
import {PaymentMethodTypeList} from './js-client.transfers_2024-06-01.model/PaymentMethodTypeList.js';
import {DefaultApi} from './js-client.transfers_2024-06-01.api/DefaultApi.js';


/**
* The_Selling_Partner_API_for_Transfers_enables_selling_partners_to_retrieve_payment_methods_and_initiate_payouts_for_their_seller_accounts__This_API_supports_the_following_marketplaces_DE_FR_IT_ES_SE_NL_PL_and_BE_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TheSellingPartnerApiForTransfers = require('transfers_2024-06-01/index'); // See note below*.
* var xxxSvc = new TheSellingPartnerApiForTransfers.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TheSellingPartnerApiForTransfers.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['transfers_2024-06-01/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TheSellingPartnerApiForTransfers.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TheSellingPartnerApiForTransfers.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module transfers_2024-06-01/index
* @version 2024-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:transfers_2024-06-01/ApiClient}
     */
    ApiClient,

    /**
     * The AssignmentType model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/AssignmentType}
     */
    AssignmentType,

    /**
     * The Error model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/Error}
     */
    Error,

    /**
     * The ErrorList model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/ErrorList}
     */
    ErrorList,

    /**
     * The ExpiryDate model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/ExpiryDate}
     */
    ExpiryDate,

    /**
     * The GetPaymentMethodsResponse model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/GetPaymentMethodsResponse}
     */
    GetPaymentMethodsResponse,

    /**
     * The InitiatePayoutRequest model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/InitiatePayoutRequest}
     */
    InitiatePayoutRequest,

    /**
     * The InitiatePayoutResponse model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/InitiatePayoutResponse}
     */
    InitiatePayoutResponse,

    /**
     * The MarketplaceId model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/MarketplaceId}
     */
    MarketplaceId,

    /**
     * The PaymentMethodDetails model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/PaymentMethodDetails}
     */
    PaymentMethodDetails,

    /**
     * The PaymentMethodList model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/PaymentMethodList}
     */
    PaymentMethodList,

    /**
     * The PaymentMethodType model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/PaymentMethodType}
     */
    PaymentMethodType,

    /**
     * The PaymentMethodTypeList model constructor.
     * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.model/PaymentMethodTypeList}
     */
    PaymentMethodTypeList,

    /**
    * The DefaultApi service constructor.
    * @property {module:transfers_2024-06-01/js-client.transfers_2024-06-01.api/DefaultApi}
    */
    DefaultApi
};
