/*
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-04-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {ErrorList} from '../js-client.catalogItems_2022-04-01.model/ErrorList.js';
import {Item} from '../js-client.catalogItems_2022-04-01.model/Item.js';
import {ItemSearchResults} from '../js-client.catalogItems_2022-04-01.model/ItemSearchResults.js';

/**
* Catalog service.
* @module catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.api/CatalogApi
* @version 2022-04-01
*/
export class CatalogApi {

    /**
    * Constructs a new CatalogApi. 
    * @alias module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.api/CatalogApi
    * @class
    * @param {module:catalogItems_2022-04-01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:catalogItems_2022-04-01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieves details for an item in the Amazon catalog.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} asin The Amazon Standard Identification Number (ASIN) of the item.
     * @param {Array.<String>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {Array.<module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String>} opts.includedData A comma-delimited list of datasets to include in the response. (default to ["summaries"])
     * @param {String} opts.locale The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/Item} and HTTP response
     */
    getCatalogItemWithHttpInfo(asin, marketplaceIds, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling getCatalogItem");
      }

      // verify the required parameter 'marketplaceIds' is set
      if (marketplaceIds === undefined || marketplaceIds === null) {
        throw new Error("Missing the required parameter 'marketplaceIds' when calling getCatalogItem");
      }


      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv'),
        'includedData': this.apiClient.buildCollectionParam(opts['includedData'], 'csv'),
        'locale': opts['locale']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Item;

      return this.apiClient.callApi(
        '/catalog/2022-04-01/items/{asin}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves details for an item in the Amazon catalog.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} asin The Amazon Standard Identification Number (ASIN) of the item.
     * @param {Array.<String>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {Array.<module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String>} opts.includedData A comma-delimited list of datasets to include in the response. (default to ["summaries"])
     * @param {String} opts.locale The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/Item}
     */
    getCatalogItem(asin, marketplaceIds, opts) {
      return this.getCatalogItemWithHttpInfo(asin, marketplaceIds, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Search for a list of Amazon catalog items and item-related information. You can search by identifier or by keywords.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array.<String>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.identifiers A comma-delimited list of product identifiers that you can use to search the Amazon catalog. **Note:** You cannot include `identifiers` and `keywords` in the same request.
     * @param {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String} opts.identifiersType The type of product identifiers that you can use to search the Amazon catalog. **Note:** `identifiersType` is required when `identifiers` is in the request.
     * @param {Array.<module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String>} opts.includedData A comma-delimited list of datasets to include in the response. (default to ["summaries"])
     * @param {String} opts.locale The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
     * @param {String} opts.sellerId A selling partner identifier, such as a seller account or vendor code. **Note:** Required when `identifiersType` is `SKU`.
     * @param {Array.<String>} opts.keywords A comma-delimited list of keywords that you can use to search the Amazon catalog. **Note:** You cannot include `keywords` and `identifiers` in the same request.
     * @param {Array.<String>} opts.brandNames A comma-delimited list of brand names that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
     * @param {Array.<String>} opts.classificationIds A comma-delimited list of classification identifiers that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
     * @param {Number} opts.pageSize The number of results to include on each page. (default to 10)
     * @param {String} opts.pageToken A token that you can use to fetch a specific page when there are multiple pages of results.
     * @param {String} opts.keywordsLocale The language of the keywords that are included in queries based on `keywords`. Defaults to the primary locale of the marketplace. **Note:** Cannot be used with `identifiers`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSearchResults} and HTTP response
     */
    searchCatalogItemsWithHttpInfo(marketplaceIds, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceIds' is set
      if (marketplaceIds === undefined || marketplaceIds === null) {
        throw new Error("Missing the required parameter 'marketplaceIds' when calling searchCatalogItems");
      }


      let pathParams = {
      };
      let queryParams = {
        'identifiers': this.apiClient.buildCollectionParam(opts['identifiers'], 'csv'),
        'identifiersType': opts['identifiersType'],
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv'),
        'includedData': this.apiClient.buildCollectionParam(opts['includedData'], 'csv'),
        'locale': opts['locale'],
        'sellerId': opts['sellerId'],
        'keywords': this.apiClient.buildCollectionParam(opts['keywords'], 'csv'),
        'brandNames': this.apiClient.buildCollectionParam(opts['brandNames'], 'csv'),
        'classificationIds': this.apiClient.buildCollectionParam(opts['classificationIds'], 'csv'),
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'keywordsLocale': opts['keywordsLocale']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemSearchResults;

      return this.apiClient.callApi(
        '/catalog/2022-04-01/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Search for a list of Amazon catalog items and item-related information. You can search by identifier or by keywords.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array.<String>} marketplaceIds A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.identifiers A comma-delimited list of product identifiers that you can use to search the Amazon catalog. **Note:** You cannot include `identifiers` and `keywords` in the same request.
     * @param {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String} opts.identifiersType The type of product identifiers that you can use to search the Amazon catalog. **Note:** `identifiersType` is required when `identifiers` is in the request.
     * @param {Array.<module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/String>} opts.includedData A comma-delimited list of datasets to include in the response. (default to ["summaries"])
     * @param {String} opts.locale The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
     * @param {String} opts.sellerId A selling partner identifier, such as a seller account or vendor code. **Note:** Required when `identifiersType` is `SKU`.
     * @param {Array.<String>} opts.keywords A comma-delimited list of keywords that you can use to search the Amazon catalog. **Note:** You cannot include `keywords` and `identifiers` in the same request.
     * @param {Array.<String>} opts.brandNames A comma-delimited list of brand names that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
     * @param {Array.<String>} opts.classificationIds A comma-delimited list of classification identifiers that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
     * @param {Number} opts.pageSize The number of results to include on each page. (default to 10)
     * @param {String} opts.pageToken A token that you can use to fetch a specific page when there are multiple pages of results.
     * @param {String} opts.keywordsLocale The language of the keywords that are included in queries based on `keywords`. Defaults to the primary locale of the marketplace. **Note:** Cannot be used with `identifiers`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSearchResults}
     */
    searchCatalogItems(marketplaceIds, opts) {
      return this.searchCatalogItemsWithHttpInfo(marketplaceIds, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
