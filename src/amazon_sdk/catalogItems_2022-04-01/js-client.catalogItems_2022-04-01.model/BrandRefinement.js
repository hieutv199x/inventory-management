/*
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-04-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The BrandRefinement model module.
 * @module catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/BrandRefinement
 * @version 2022-04-01
 */
export class BrandRefinement {
  /**
   * Constructs a new <code>BrandRefinement</code>.
   * A brand that you can use to refine your search.
   * @alias module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/BrandRefinement
   * @class
   * @param numberOfResults {Number} The estimated number of results that would be returned if you refine your search by the specified `brandName`.
   * @param brandName {String} The brand name that you can use to refine your search.
   */
  constructor(numberOfResults, brandName) {
    this.numberOfResults = numberOfResults;
    this.brandName = brandName;
  }

  /**
   * Constructs a <code>BrandRefinement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/BrandRefinement} obj Optional instance to populate.
   * @return {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/BrandRefinement} The populated <code>BrandRefinement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new BrandRefinement();
      if (data.hasOwnProperty('numberOfResults'))
        obj.numberOfResults = ApiClient.convertToType(data['numberOfResults'], 'Number');
      if (data.hasOwnProperty('brandName'))
        obj.brandName = ApiClient.convertToType(data['brandName'], 'String');
    }
    return obj;
  }
}

/**
 * The estimated number of results that would be returned if you refine your search by the specified `brandName`.
 * @member {Number} numberOfResults
 */
BrandRefinement.prototype.numberOfResults = undefined;

/**
 * The brand name that you can use to refine your search.
 * @member {String} brandName
 */
BrandRefinement.prototype.brandName = undefined;


