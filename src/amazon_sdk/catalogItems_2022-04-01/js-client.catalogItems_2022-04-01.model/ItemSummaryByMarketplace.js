/*
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-04-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemBrowseClassification} from './ItemBrowseClassification.js';
import {ItemContributor} from './ItemContributor.js';

/**
 * The ItemSummaryByMarketplace model module.
 * @module catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSummaryByMarketplace
 * @version 2022-04-01
 */
export class ItemSummaryByMarketplace {
  /**
   * Constructs a new <code>ItemSummaryByMarketplace</code>.
   * Information about an Amazon catalog item for the indicated `marketplaceId`.
   * @alias module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSummaryByMarketplace
   * @class
   * @param marketplaceId {String} Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
   */
  constructor(marketplaceId) {
    this.marketplaceId = marketplaceId;
  }

  /**
   * Constructs a <code>ItemSummaryByMarketplace</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSummaryByMarketplace} obj Optional instance to populate.
   * @return {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSummaryByMarketplace} The populated <code>ItemSummaryByMarketplace</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ItemSummaryByMarketplace();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('adultProduct'))
        obj.adultProduct = ApiClient.convertToType(data['adultProduct'], 'Boolean');
      if (data.hasOwnProperty('autographed'))
        obj.autographed = ApiClient.convertToType(data['autographed'], 'Boolean');
      if (data.hasOwnProperty('brand'))
        obj.brand = ApiClient.convertToType(data['brand'], 'String');
      if (data.hasOwnProperty('browseClassification'))
        obj.browseClassification = ItemBrowseClassification.constructFromObject(data['browseClassification']);
      if (data.hasOwnProperty('color'))
        obj.color = ApiClient.convertToType(data['color'], 'String');
      if (data.hasOwnProperty('contributors'))
        obj.contributors = ApiClient.convertToType(data['contributors'], [ItemContributor]);
      if (data.hasOwnProperty('itemClassification'))
        obj.itemClassification = ApiClient.convertToType(data['itemClassification'], 'String');
      if (data.hasOwnProperty('itemName'))
        obj.itemName = ApiClient.convertToType(data['itemName'], 'String');
      if (data.hasOwnProperty('manufacturer'))
        obj.manufacturer = ApiClient.convertToType(data['manufacturer'], 'String');
      if (data.hasOwnProperty('memorabilia'))
        obj.memorabilia = ApiClient.convertToType(data['memorabilia'], 'Boolean');
      if (data.hasOwnProperty('modelNumber'))
        obj.modelNumber = ApiClient.convertToType(data['modelNumber'], 'String');
      if (data.hasOwnProperty('packageQuantity'))
        obj.packageQuantity = ApiClient.convertToType(data['packageQuantity'], 'Number');
      if (data.hasOwnProperty('partNumber'))
        obj.partNumber = ApiClient.convertToType(data['partNumber'], 'String');
      if (data.hasOwnProperty('releaseDate'))
        obj.releaseDate = ApiClient.convertToType(data['releaseDate'], 'Date');
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'String');
      if (data.hasOwnProperty('style'))
        obj.style = ApiClient.convertToType(data['style'], 'String');
      if (data.hasOwnProperty('tradeInEligible'))
        obj.tradeInEligible = ApiClient.convertToType(data['tradeInEligible'], 'Boolean');
      if (data.hasOwnProperty('websiteDisplayGroup'))
        obj.websiteDisplayGroup = ApiClient.convertToType(data['websiteDisplayGroup'], 'String');
      if (data.hasOwnProperty('websiteDisplayGroupName'))
        obj.websiteDisplayGroupName = ApiClient.convertToType(data['websiteDisplayGroupName'], 'String');
    }
    return obj;
  }
}

/**
 * Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
 * @member {String} marketplaceId
 */
ItemSummaryByMarketplace.prototype.marketplaceId = undefined;

/**
 * When `true`, the Amazon catalog item is intended for an adult audience or is sexual in nature.
 * @member {Boolean} adultProduct
 */
ItemSummaryByMarketplace.prototype.adultProduct = undefined;

/**
 * When `true`, the Amazon catalog item is autographed.
 * @member {Boolean} autographed
 */
ItemSummaryByMarketplace.prototype.autographed = undefined;

/**
 * Name of the brand that is associated with the Amazon catalog item.
 * @member {String} brand
 */
ItemSummaryByMarketplace.prototype.brand = undefined;

/**
 * Classification (browse node) that is associated with the Amazon catalog item.
 * @member {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemBrowseClassification} browseClassification
 */
ItemSummaryByMarketplace.prototype.browseClassification = undefined;

/**
 * The color that is associated with the Amazon catalog item.
 * @member {String} color
 */
ItemSummaryByMarketplace.prototype.color = undefined;

/**
 * Individual contributors to the creation of the item, such as the authors or actors.
 * @member {Array.<module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemContributor>} contributors
 */
ItemSummaryByMarketplace.prototype.contributors = undefined;

/**
 * Allowed values for the <code>itemClassification</code> property.
 * @enum {String}
 * @readonly
 */
ItemSummaryByMarketplace.ItemClassificationEnum = {
  /**
   * value: "BASE_PRODUCT"
   * @const
   */
  BASE_PRODUCT: "BASE_PRODUCT",

  /**
   * value: "OTHER"
   * @const
   */
  OTHER: "OTHER",

  /**
   * value: "PRODUCT_BUNDLE"
   * @const
   */
  PRODUCT_BUNDLE: "PRODUCT_BUNDLE",

  /**
   * value: "VARIATION_PARENT"
   * @const
   */
  VARIATION_PARENT: "VARIATION_PARENT"
};

/**
 * Classification type that is associated with the Amazon catalog item.
 * @member {module:catalogItems_2022-04-01/js-client.catalogItems_2022-04-01.model/ItemSummaryByMarketplace.ItemClassificationEnum} itemClassification
 */
ItemSummaryByMarketplace.prototype.itemClassification = undefined;

/**
 * The name that is associated with the Amazon catalog item.
 * @member {String} itemName
 */
ItemSummaryByMarketplace.prototype.itemName = undefined;

/**
 * The name of the manufacturer that is associated with the Amazon catalog item.
 * @member {String} manufacturer
 */
ItemSummaryByMarketplace.prototype.manufacturer = undefined;

/**
 * When true, the item is classified as memorabilia.
 * @member {Boolean} memorabilia
 */
ItemSummaryByMarketplace.prototype.memorabilia = undefined;

/**
 * The model number that is associated with the Amazon catalog item.
 * @member {String} modelNumber
 */
ItemSummaryByMarketplace.prototype.modelNumber = undefined;

/**
 * The quantity of the Amazon catalog item within one package.
 * @member {Number} packageQuantity
 */
ItemSummaryByMarketplace.prototype.packageQuantity = undefined;

/**
 * The part number that is associated with the Amazon catalog item.
 * @member {String} partNumber
 */
ItemSummaryByMarketplace.prototype.partNumber = undefined;

/**
 * The earliest date on which the Amazon catalog item can be shipped to customers.
 * @member {Date} releaseDate
 */
ItemSummaryByMarketplace.prototype.releaseDate = undefined;

/**
 * The name of the size of the Amazon catalog item.
 * @member {String} size
 */
ItemSummaryByMarketplace.prototype.size = undefined;

/**
 * The name of the style that is associated with the Amazon catalog item.
 * @member {String} style
 */
ItemSummaryByMarketplace.prototype.style = undefined;

/**
 * When true, the Amazon catalog item is eligible for trade-in.
 * @member {Boolean} tradeInEligible
 */
ItemSummaryByMarketplace.prototype.tradeInEligible = undefined;

/**
 * The identifier of the website display group that is associated with the Amazon catalog item.
 * @member {String} websiteDisplayGroup
 */
ItemSummaryByMarketplace.prototype.websiteDisplayGroup = undefined;

/**
 * The display name of the website display group that is associated with the Amazon catalog item.
 * @member {String} websiteDisplayGroupName
 */
ItemSummaryByMarketplace.prototype.websiteDisplayGroupName = undefined;


