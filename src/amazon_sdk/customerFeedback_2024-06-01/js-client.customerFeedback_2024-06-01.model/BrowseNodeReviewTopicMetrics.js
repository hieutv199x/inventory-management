/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {BrowseNodeAllOccurrence} from './BrowseNodeAllOccurrence.js';
import {BrowseNodeAllStarRatingImpact} from './BrowseNodeAllStarRatingImpact.js';

/**
 * The BrowseNodeReviewTopicMetrics model module.
 * @module customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicMetrics
 * @version 2024-06-01
 */
export class BrowseNodeReviewTopicMetrics {
  /**
   * Constructs a new <code>BrowseNodeReviewTopicMetrics</code>.
   * The browse node review topic metrics.
   * @alias module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicMetrics
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BrowseNodeReviewTopicMetrics</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicMetrics} obj Optional instance to populate.
   * @return {module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicMetrics} The populated <code>BrowseNodeReviewTopicMetrics</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new BrowseNodeReviewTopicMetrics();
      if (data.hasOwnProperty('occurrencePercentage'))
        obj.occurrencePercentage = BrowseNodeAllOccurrence.constructFromObject(data['occurrencePercentage']);
      if (data.hasOwnProperty('starRatingImpact'))
        obj.starRatingImpact = BrowseNodeAllStarRatingImpact.constructFromObject(data['starRatingImpact']);
    }
    return obj;
  }
}

/**
 * The percentage of reviews that mention a topic. This value is `null` if the topic isn't mentioned enough in the reviews.
 * @member {module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeAllOccurrence} occurrencePercentage
 */
BrowseNodeReviewTopicMetrics.prototype.occurrencePercentage = undefined;

/**
 * The effect a topic has on the browse node's star rating. This value is `null` if the topic doesn't affect the star rating of the browse node.
 * @member {module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeAllStarRatingImpact} starRatingImpact
 */
BrowseNodeReviewTopicMetrics.prototype.starRatingImpact = undefined;


