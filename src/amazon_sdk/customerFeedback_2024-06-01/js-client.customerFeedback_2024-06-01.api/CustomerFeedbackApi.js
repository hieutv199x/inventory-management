/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {BrowseNodeResponse} from '../js-client.customerFeedback_2024-06-01.model/BrowseNodeResponse.js';
import {BrowseNodeReturnTopicsResponse} from '../js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTopicsResponse.js';
import {BrowseNodeReturnTrendsResponse} from '../js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTrendsResponse.js';
import {BrowseNodeReviewTopicsResponse} from '../js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicsResponse.js';
import {BrowseNodeReviewTrendsResponse} from '../js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTrendsResponse.js';
import {ErrorList} from '../js-client.customerFeedback_2024-06-01.model/ErrorList.js';
import {ItemReviewTopicsResponse} from '../js-client.customerFeedback_2024-06-01.model/ItemReviewTopicsResponse.js';
import {ItemReviewTrendsResponse} from '../js-client.customerFeedback_2024-06-01.model/ItemReviewTrendsResponse.js';

/**
* CustomerFeedback service.
* @module customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.api/CustomerFeedbackApi
* @version 2024-06-01
*/
export class CustomerFeedbackApi {

    /**
    * Constructs a new CustomerFeedbackApi. 
    * @alias module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.api/CustomerFeedbackApi
    * @class
    * @param {module:customerFeedback_2024-06-01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:customerFeedback_2024-06-01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieve the topics that customers mention when they return items in a browse node.
     * @param {String} browseNodeId A browse node ID is a unique identifier for a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTopicsResponse} and HTTP response
     */
    getBrowseNodeReturnTopicsWithHttpInfo(browseNodeId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'browseNodeId' is set
      if (browseNodeId === undefined || browseNodeId === null) {
        throw new Error("Missing the required parameter 'browseNodeId' when calling getBrowseNodeReturnTopics");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getBrowseNodeReturnTopics");
      }


      let pathParams = {
        'browseNodeId': browseNodeId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BrowseNodeReturnTopicsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/returns/topics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve the topics that customers mention when they return items in a browse node.
     * @param {String} browseNodeId A browse node ID is a unique identifier for a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTopicsResponse}
     */
    getBrowseNodeReturnTopics(browseNodeId, marketplaceId) {
      return this.getBrowseNodeReturnTopicsWithHttpInfo(browseNodeId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve the trends of topics that customers mention when they return items in a browse node.
     * @param {String} browseNodeId A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTrendsResponse} and HTTP response
     */
    getBrowseNodeReturnTrendsWithHttpInfo(browseNodeId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'browseNodeId' is set
      if (browseNodeId === undefined || browseNodeId === null) {
        throw new Error("Missing the required parameter 'browseNodeId' when calling getBrowseNodeReturnTrends");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getBrowseNodeReturnTrends");
      }


      let pathParams = {
        'browseNodeId': browseNodeId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BrowseNodeReturnTrendsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/returns/trends', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve the trends of topics that customers mention when they return items in a browse node.
     * @param {String} browseNodeId A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReturnTrendsResponse}
     */
    getBrowseNodeReturnTrends(browseNodeId, marketplaceId) {
      return this.getBrowseNodeReturnTrendsWithHttpInfo(browseNodeId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve a browse node's ten most positive and ten most negative review topics.
     * @param {String} browseNodeId The ID of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @param {String} sortBy The metric by which to sort the data in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicsResponse} and HTTP response
     */
    getBrowseNodeReviewTopicsWithHttpInfo(browseNodeId, marketplaceId, sortBy) {
      let postBody = null;

      // verify the required parameter 'browseNodeId' is set
      if (browseNodeId === undefined || browseNodeId === null) {
        throw new Error("Missing the required parameter 'browseNodeId' when calling getBrowseNodeReviewTopics");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getBrowseNodeReviewTopics");
      }

      // verify the required parameter 'sortBy' is set
      if (sortBy === undefined || sortBy === null) {
        throw new Error("Missing the required parameter 'sortBy' when calling getBrowseNodeReviewTopics");
      }


      let pathParams = {
        'browseNodeId': browseNodeId
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'sortBy': sortBy
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BrowseNodeReviewTopicsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/reviews/topics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve a browse node's ten most positive and ten most negative review topics.
     * @param {String} browseNodeId The ID of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @param {String} sortBy The metric by which to sort the data in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTopicsResponse}
     */
    getBrowseNodeReviewTopics(browseNodeId, marketplaceId, sortBy) {
      return this.getBrowseNodeReviewTopicsWithHttpInfo(browseNodeId, marketplaceId, sortBy)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve the positive and negative review trends of items in a browse node for the past six months.
     * @param {String} browseNodeId A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The marketplace ID is the globally unique identifier of a marketplace. For more information, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTrendsResponse} and HTTP response
     */
    getBrowseNodeReviewTrendsWithHttpInfo(browseNodeId, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'browseNodeId' is set
      if (browseNodeId === undefined || browseNodeId === null) {
        throw new Error("Missing the required parameter 'browseNodeId' when calling getBrowseNodeReviewTrends");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getBrowseNodeReviewTrends");
      }


      let pathParams = {
        'browseNodeId': browseNodeId
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BrowseNodeReviewTrendsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/reviews/trends', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve the positive and negative review trends of items in a browse node for the past six months.
     * @param {String} browseNodeId A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content.
     * @param {String} marketplaceId The marketplace ID is the globally unique identifier of a marketplace. For more information, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeReviewTrendsResponse}
     */
    getBrowseNodeReviewTrends(browseNodeId, marketplaceId) {
      return this.getBrowseNodeReviewTrendsWithHttpInfo(browseNodeId, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * This API returns the associated browse node of the requested ASIN. A browse node is a location in a browse tree that is used for navigation, product classification, and website content on the Amazon retail website.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeResponse} and HTTP response
     */
    getItemBrowseNodeWithHttpInfo(asin, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling getItemBrowseNode");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getItemBrowseNode");
      }


      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BrowseNodeResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/items/{asin}/browseNode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * This API returns the associated browse node of the requested ASIN. A browse node is a location in a browse tree that is used for navigation, product classification, and website content on the Amazon retail website.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/BrowseNodeResponse}
     */
    getItemBrowseNode(asin, marketplaceId) {
      return this.getItemBrowseNodeWithHttpInfo(asin, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve an item's ten most positive and ten most negative review topics.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. The value must be a child ASIN.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @param {String} sortBy The metric by which to sort data in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/ItemReviewTopicsResponse} and HTTP response
     */
    getItemReviewTopicsWithHttpInfo(asin, marketplaceId, sortBy) {
      let postBody = null;

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling getItemReviewTopics");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getItemReviewTopics");
      }

      // verify the required parameter 'sortBy' is set
      if (sortBy === undefined || sortBy === null) {
        throw new Error("Missing the required parameter 'sortBy' when calling getItemReviewTopics");
      }


      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'sortBy': sortBy
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemReviewTopicsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/items/{asin}/reviews/topics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve an item's ten most positive and ten most negative review topics.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. The value must be a child ASIN.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @param {String} sortBy The metric by which to sort data in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/ItemReviewTopicsResponse}
     */
    getItemReviewTopics(asin, marketplaceId, sortBy) {
      return this.getItemReviewTopicsWithHttpInfo(asin, marketplaceId, sortBy)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve an item's positive and negative review trends for the past six months.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. This API takes child ASIN as an input.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/ItemReviewTrendsResponse} and HTTP response
     */
    getItemReviewTrendsWithHttpInfo(asin, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling getItemReviewTrends");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getItemReviewTrends");
      }


      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemReviewTrendsResponse;

      return this.apiClient.callApi(
        '/customerFeedback/2024-06-01/items/{asin}/reviews/trends', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve an item's positive and negative review trends for the past six months.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. This API takes child ASIN as an input.
     * @param {String} marketplaceId The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:customerFeedback_2024-06-01/js-client.customerFeedback_2024-06-01.model/ItemReviewTrendsResponse}
     */
    getItemReviewTrends(asin, marketplaceId) {
      return this.getItemReviewTrendsWithHttpInfo(asin, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
