datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  sessions  Session[]
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
  sessionToken String   @unique
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
}

model TikTokApp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  appName   String   // Tên gợi nhớ cho ứng dụng, ví dụ: "App Bán Hàng Chính"
  appId     String
  appKey    String   @unique // App Key từ TikTok, phải là duy nhất
  appSecret String   // App Secret từ TikTok

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Một ứng dụng có thể có nhiều sự ủy quyền từ các shop khác nhau.
  authorizations ShopAuthorization[]
}

model ShopAuthorization {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId

  // --- Thông tin định danh của Shop từ TikTok ---
  shopId     String  @unique // ID của shop (ví dụ: "751..."), phải là duy nhất
  shopCipher String  @unique // Cipher của shop, dùng cho một số API
  shopName   String? // Tên của shop
  region     String? // Khu vực của shop (ví dụ: "VN")

  // --- Dữ liệu ủy quyền (TOKEN NẰM Ở ĐÂY) ---
  accessToken  String   // Access Token của riêng shop này
  refreshToken String   // Refresh Token của riêng shop này
  expiresIn    Int      // Thời gian sống của access token (tính bằng giây)
  scope        String?  // Các quyền được cấp, ví dụ: "orders,products"

  // --- Trạng thái và Mối quan hệ ---
  status    AuthorizationStatus @default(ACTIVE) // Trạng thái của token (sử dụng Enum để an toàn hơn)

  // Liên kết tới ứng dụng đã ủy quyền cho shop này
  appId String    @db.ObjectId
  app   TikTokApp @relation(fields: [appId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Enum giúp đảm bảo tính toàn vẹn dữ liệu cho trường status
enum AuthorizationStatus {
  ACTIVE    // Đang hoạt động
  EXPIRED   // Đã hết hạn (cần refresh)
  REVOKED   // Đã bị thu hồi
  INACTIVE  // Không hoạt động
}
